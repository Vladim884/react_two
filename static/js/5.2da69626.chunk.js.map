{"version":3,"sources":["components/hoc/withAuthRedirect.jsx","components/dialogs/dialogs.module.css","components/dialogs/dialogItem/DialogItem.jsx","components/dialogs/user_message/Message.jsx","components/dialogs/Dialogs.jsx","components/dialogs/Dialogs_Container.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","authReducer","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","src","alt","width","name","Message","message","maxLength30","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","Dialogs","dialogs","map","d","messages","m","likesCont","dialogs_items","values","addMessageBLL","newMessageBody","compose","messageValue","dialogsReducer","newMessageText","dispatch","addMessageAC"],"mappings":"6MAKIA,EAA2B,SAACC,GAC5B,MAAO,CACLC,OAAQD,EAAME,YAAYD,SAMnBE,EAAmB,SAACC,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAHJ,GACbC,IAAML,WAQtC,OADuCM,YAAQX,EAARW,CAAiCL,K,oBCpB1EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sFCgBrKC,EAbI,SAACN,GAClB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACE,yBAAKC,UAAWC,IAAEC,QAChB,kBAAC,IAAD,CAASV,GAAIM,GACX,yBAAKK,IAAI,sCAAsCC,IAAI,OAAOC,MAAM,OACjEd,EAAMe,QCCEC,EARC,SAAChB,GACf,OACA,yBAAKS,UAAWC,IAAEO,SACfjB,EAAMiB,U,yCCILC,EAAcC,YAAiB,IAiD/BC,EAAsBC,YAAU,CAEpCC,KAAM,yBAFoBD,EAbL,SAACrB,GACtB,OACE,0BAAMuB,SAAUvB,EAAMwB,cACpB,kBAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,IAAUT,GAC1BU,UAAWC,IACXd,KAAK,iBACLe,YAAY,gCAEd,mDAUSC,EApDC,SAAC/B,GAEf,IAAIgC,EAAUhC,EAAMgC,QAAQC,KAAI,SAACC,GAAD,OAC9B,kBAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAMP,GAAI0B,EAAE1B,QAG9B2B,EAAWnC,EAAMmC,SAASF,KAAI,SAACG,GAAD,OAChC,kBAAC,EAAD,CAASnB,QAASmB,EAAEnB,QAASoB,UAAWD,EAAEC,eAc5C,OACE,yBAAK5B,UAAWC,IAAEsB,SAChB,yBAAKvB,UAAWC,IAAE4B,eAAgBN,GAClC,yBAAKvB,UAAWC,IAAEyB,UACfA,EACD,6BACE,kBAACf,EAAD,CAAqBG,SAVT,SAACgB,GACnBvC,EAAMwC,cAAcD,EAAOE,uB,yBCAhBC,4BACbvC,aAvBoB,SAACV,GACrB,MAAO,CACLkD,aAAclD,EAAMmD,eAAeC,eACnCb,QAASvC,EAAMmD,eAAeZ,QAC9BG,SAAU1C,EAAMmD,eAAeT,aAIV,SAACW,GAExB,MAAO,CACLN,cAAe,SAACC,GACdK,EAASC,YAAaN,SAY1B7C,IAFa8C,CAGbX","file":"static/js/5.2da69626.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsRedirect  = (state) => {\r\n    return {\r\n      isAuth: state.authReducer.isAuth\r\n    }\r\n  }\r\n  \r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let connectWithAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n  return connectWithAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__3JC4D\",\"dialogs_items\":\"dialogs_dialogs_items__xZTyZ\",\"active\":\"dialogs_active__2vUcQ\",\"messages\":\"dialogs_messages__1d2su\",\"message\":\"dialogs_message__2aXnj\"};","import React from \"react\";\r\nimport s from \"../dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path}>\r\n        <img src=\"https://nulm.gov.in/images/user.png\" alt=\"user\" width=\"14\" />\r\n      {props.name}\r\n      </NavLink>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n  <div className={s.message}>\r\n    {props.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./dialogs.module.css\";\r\nimport DialogItem from \"./dialogItem/DialogItem\";\r\nimport Message from \"./user_message/Message\";\r\nimport { addMessageAC, updateNewTextAC } from \"../../redux/dialogs_reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormControl/Formscontrol\";\r\nimport { required, maxLengthCreator } from \"../../utils/validators/validators\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst Dialogs = (props) => {\r\n  // debugger;\r\n  let dialogs = props.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} />\r\n  ));\r\n\r\n  let messages = props.messages.map((m) => (\r\n    <Message message={m.message} likesCont={m.likesCont} />\r\n  ));\r\n\r\n  let addMessage = () => props.addMessageBLL();\r\n\r\n  // let updateNewText = (e) => {\r\n  //   let text = e.target.value;\r\n  //   props.updateNewTextBLL(text);\r\n  // }\r\n\r\n  let addNewMessage = (values) => {\r\n    props.addMessageBLL(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs_items}>{dialogs}</div>\r\n      <div className={s.messages}>\r\n        {messages}\r\n        <div>\r\n          <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field validate={[required, maxLength30]} \r\n        component={Textarea}\r\n        name=\"newMessageBody\"\r\n        placeholder=\"Please, enter your message!\"\r\n      />\r\n      <button>Add Message</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n  // a unique name for the form\r\n  form: \"dialogsAddMessageForm\",\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport Dialogs from './Dialogs';\r\nimport {addMessageAC, updateNewTextAC} from '../../redux/dialogs_reducer';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messageValue: state.dialogsReducer.newMessageText,\r\n    dialogs: state.dialogsReducer.dialogs,\r\n    messages: state.dialogsReducer.messages,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  \r\n  return {\r\n    addMessageBLL: (newMessageBody) => {\r\n      dispatch(addMessageAC(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n\r\n// let DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect,\r\n)(Dialogs);\r\n"],"sourceRoot":""}